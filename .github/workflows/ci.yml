
name: Unit testing, integration testing, build documentation, release

on: [push, pull_request]

jobs:
  test-unit:
    name: Unit test job
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements.txt
    - name: Install unit test dependencies
      run: |
        pip install -r src/tests/requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run unit tests
      run: |
        pytest src/tests/

  publish-test:
    name: Publish test job
    runs-on: ubuntu-latest
    needs: test-unit
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"
    - name: Install deploy dependencies
      run:
        python -m pip install --upgrade pip build twine
    - name: Build package
      run:
        python -m build
    - name: Test PyPI upload
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}
      run: python -m twine upload --repository testpypi dist/*

  publish-final:
    name: Publish job
    runs-on: ubuntu-latest
    needs: publish-test
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"
    - name: Install deploy dependencies
      run:
        python -m pip install --upgrade pip build twine
    - name: Build package
      run:
        python -m build
    - name: PyPI upload
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: twine upload dist/*